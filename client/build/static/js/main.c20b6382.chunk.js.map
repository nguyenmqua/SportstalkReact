{"version":3,"sources":["utils/UserContext.js","utils/API.js","components/Edit/index.js","components/Login/index.js","components/Post/index.js","components/Comments/index.js","components/Odds/index.js","components/SearchForm/index.js","components/Bet/index.js","components/Notifications/index.js","pages/Newsfeed.js","components/Signup/index.js","pages/Auth/Auth.js","pages/NoMatch.js","pages/Wager.js","components/Ticker/index.js","components/MenuNotificaitons/index.js","components/TopNav/index.js","components/UserPost/index.js","components/UpdateResults/index.js","components/UserBet/index.js","components/Result/index.js","pages/Member.js","App.js","index.js"],"names":["UserContext","React","createContext","userData","loggedIn","user","failureMessage","post","notifications","AllPost","Post","loading","handleInputChange","handleLogin","handleSignup","logout","deleteNotifications","loadPost","setPost","deletePost","sidebarToggle","footballColor","setLoading","login","loginInfo","axios","signup","signupInfo","isLoggedIn","get","getUserData","id","postPost","data","newsfeed","newsfeedByID","delete","getPost","postComment","getComment","getNFL","getSportsNews","getUpdateProfilePic","profilePic","getUsers","getUser","postBet","console","log","getBet","updateBet","put","getUserBet","settleBet","getNotifications","completeBet","Edit","useState","Open","setOpen","useContext","imageSelected","setImageSelected","uploadImage","e","a","FormData","append","fetch","method","body","res","json","file","API","userId","_id","secure_url","window","location","href","Modal","open","onClose","onOpen","trigger","Button","color","style","fontSize","Dimmer","active","Loader","content","Header","Content","image","Description","Form","Input","type","name","placeholder","onChange","event","target","files","Actions","negative","onClick","positive","Login","loginFailureMessage","Grid","textAlign","height","margin","verticalAlign","Column","maxWidth","paddingRight","as","size","Segment","fluid","icon","iconPosition","value","username","password","Message","error","to","props","handleUserBtnClick","Card","Group","className","Image","circular","src","firstname","TextArea","floated","h1","marginTop","padding","button","CommentSection","Comments","setComments","newComment","setNewComment","showComment","setshowComment","useEffect","loadComments","then","rows","labelPosition","primary","preventDefault","comment","postId","catch","err","Comment","map","key","Avatar","Author","Metadata","moment","date","fromNow","Text","Odds","NFLgames","setNFLgames","backgroundColor","scrolling","game","teams","secondary","Table","celled","structured","Row","HeaderCell","rowSpan","sites_count","colSpan","Body","sites","site","site_key","Cell","site_nice","odds","spreads","points","SearchForm","users","search","handleInputClick","htmlFor","list","Bet","pickEm","setPickEm","setUsers","setSearch","wager","setWager","loadNFL","loadUsers","handleChange","arr","stackable","reversed","columns","padded","compact","definition","fullWidth","home_team","Label","basic","pointing","length","pick","bets","sportTicket","competitor","Notifications","Feed","notification","Event","Popup","Icon","fitted","Summary","Date","createdAt","Extra","updater","winner","Newsfeed","width","borderColor","centered","format","header","Meta","only","Signup","validFirstName","setValidFirstName","validLastName","setValidLastName","validEmail","setValidEmail","validUserName","setValidUserName","validPassword","setValidPassword","isConfirmed","setIsConfirmed","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","Field","control","onBlur","valid","toString","lastname","email","RegExp","test","onKeyUp","disabled","Auth","action","NoMatch","Wager","currentWager","setCurrentWager","currentWagerAuthor","setCurrentWagerAuthor","currentSportTicket","setCurrentSportTicket","useParams","loadWager","handleFinalApporval","complete","completed","startOf","ticket","__id","extra","SportsTicker","articles","setArticles","whiteSpace","join","visibility","StockTicker","offset","speed","position","Navigation","userPage","Menu","borderless","postion","Item","corner","UserPost","creatAt","UpdateResults","bet","setWinner","submitWinner","divided","raised","Radio","label","checked","UserBet","allBets","Results","allResults","Member","setAllPost","setAllBets","setAllResults","panes","menuItem","render","Tab","Pane","Result","panes2","menu","vertical","tabular","App","setUserData","setLoggedin","setUser","setFailureMessage","setLoginFailureMessage","setNotifications","visible","setVisible","message","contextValue","team","Provider","TopNav","Sidebar","Pushable","animation","inverted","onHide","Pusher","dimmed","exact","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c20b6382.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst UserContext = React.createContext({\r\n  userData: {},\r\n  loggedIn: false,\r\n  user: {},\r\n  failureMessage: \"\",\r\n  post: {},\r\n  notifications:{},\r\n  AllPost:{},\r\n  Post: \"\",\r\n  loading: false,\r\n  handleInputChange: () => {},\r\n  handleLogin: () => {},\r\n  handleSignup: () => {},\r\n  logout: () => {},\r\n  deleteNotifications: () => {},\r\n  loadPost: () => {},\r\n  setPost: ()=>{},\r\n  deletePost: ()=>{},\r\n  sidebarToggle: () =>{},\r\n  footballColor:() =>{},\r\n  setLoading: () => {}\r\n});\r\n\r\nexport default UserContext;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  login: function (loginInfo) {\r\n    return axios.post('/api/users/login', loginInfo);\r\n  },\r\n\r\n  signup: function (signupInfo) {\r\n    return axios.post('/api/users/signup', signupInfo);\r\n  },\r\n\r\n  isLoggedIn: function () {\r\n    return axios.get('/api/users/profile');\r\n  },\r\n\r\n  logout: function () {\r\n    return axios.get('/api/users/logout');\r\n  },\r\n\r\n  getUserData: function(id){\r\n    return axios.get(\"/api/login/\" + id)\r\n  },\r\n\r\n  postPost: function(data){\r\n    return axios.post(\"/api/post\", data)\r\n  },\r\n\r\n  newsfeed: function(){\r\n    return axios.get(\"/api/newsfeed\")\r\n  },\r\n\r\n  newsfeedByID: function(id){\r\n    \r\n    return axios.get(\"/api/newsfeed/\"+id)\r\n  },\r\n\r\n  deletePost: function(id) {\r\n    return axios.delete(\"/api/post/\" + id);\r\n  },\r\n\r\n  getPost: function(id){\r\n    return axios.get(\"/api/post/\" +id)\r\n  },\r\n  \r\n  postComment: function(data){\r\n    return axios.post(\"/api/comments\",data)\r\n  },\r\n\r\n  getComment: function(id){\r\n    return axios.get(\"/api/comments/\"+id)\r\n  },\r\n\r\n  getNFL: function (){\r\n    return axios.get(\"/api/sportsdata\")\r\n  },\r\n\r\n  getSportsNews: function () {\r\n    return axios.get(\"/api/sportsnews\")\r\n  },\r\n\r\n  getUpdateProfilePic(profilePic){\r\n    return axios.post(\"/api/profile/\", profilePic)\r\n  },\r\n\r\n  getUsers(){\r\n    return axios.get(\"/api/usersdata\")\r\n  },\r\n\r\n  getUser(id){\r\n    return axios.get(\"/api/usersdata/\"+id)\r\n  },\r\n\r\n  postBet(data){\r\n    console.log(data)\r\n    return axios.post(\"/api/bets\", data )\r\n  },\r\n\r\n  getBet(id){\r\n    return axios.get(\"/api/bets/\"+id)\r\n  },\r\n\r\n  updateBet(id){\r\n    return axios.put(\"/api/bets/\", id)\r\n  },\r\n\r\n  getUserBet(id){\r\n    \r\n    return axios.get(\"/api/userbet/\"+id)\r\n  },\r\n \r\n  settleBet(data){\r\n    return axios.put(\"/api/userbet\",data)\r\n  },\r\n  getNotifications(id){\r\n    \r\n    return axios.get(\"/api/notifications/\" + id)\r\n  },\r\n\r\n  deleteNotifications(id){\r\n    \r\n    return axios.delete(\"/api/notifications/\" + id)\r\n  },\r\n\r\n  completeBet(id){\r\n    return axios.put(\"/api/results\",id)\r\n  }\r\n  \r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport UserContext from '../../utils/UserContext';\r\nimport { Button, Modal, Dimmer, Loader} from 'semantic-ui-react'\r\nimport API from '../../utils/API';\r\nimport {Form, Input} from 'reactstrap'\r\n\r\nconst Edit  = () => {\r\n    const [Open, setOpen] = useState(false)\r\n    const {user} =useContext(UserContext)\r\n    const [imageSelected, setImageSelected] = useState({})\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n    const uploadImage = async (e) => {\r\n        const data = new FormData()\r\n        data.append('file', imageSelected)\r\n        data.append('upload_preset', 'janishto')\r\n        setLoading(true)\r\n        const res = await fetch(\r\n          'https://api.cloudinary.com/v1_1/sportstalk/image/upload',\r\n          {\r\n            method: 'POST',\r\n            body: data\r\n          }\r\n        )\r\n        const file = await res.json()\r\n\r\n      API.getUpdateProfilePic({\r\n          userId: user._id,\r\n          profilePic: file.secure_url\r\n        })\r\n        window.location.href = '/';\r\n        setLoading(false)\r\n            \r\n        }\r\n\r\n    ;\r\n    return(\r\n        <>\r\n        <Modal\r\n        open={Open}\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        trigger={<Button id=\"headers\" color=\"blue\" style={{fontSize: \"24px\", color:\"#000000\"}}>Edit Profile Pic</Button>}\r\n        >\r\n         {loading ? (\r\n                <Dimmer active>\r\n                   <Loader content='Loading' />\r\n                 </Dimmer>\r\n               ):(\r\n                 <>\r\n        <Modal.Header id=\"headers\" style={{fontSize:\"50px\"}}>Select Profile Pic</Modal.Header>\r\n        <Modal.Content image>\r\n            <Modal.Description>\r\n            <Form>\r\n                <Input\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    placeholder=\"profile image\"\r\n                    onChange={(event) => {\r\n                    setImageSelected(event.target.files[0]);\r\n                    }}\r\n                />\r\n            </Form>\r\n            </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={() => setOpen(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button positive onClick={uploadImage}>\r\n            Submit\r\n          </Button>\r\n        </Modal.Actions>\r\n        </>)}\r\n      </Modal>\r\n    </>\r\n    )\r\n};\r\n\r\nexport default Edit","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport UserContext from '../../utils/UserContext';\r\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\r\n\r\nconst Login = () => {\r\n  const { userData, handleInputChange, handleLogin, loginFailureMessage } = useContext(UserContext);\r\n\r\n  return (\r\n    <Grid textAlign='center' style={{ height: '100vh', margin:\"10px\"  }} verticalAlign='top'>\r\n    <Grid.Column style={{ maxWidth: 450, paddingRight:\"10px\"  }}>\r\n      <Header as='h2' color='blue' textAlign='center'>\r\n         Log-in to your account\r\n      </Header>\r\n      <Form size='large'>\r\n        <Segment >\r\n          <Form.Input \r\n            type=\"text\"\r\n            name =\"username\"\r\n            fluid icon='user' \r\n            iconPosition='left' \r\n            placeholder='user' \r\n            value={userData.username}\r\n            onChange={handleInputChange}/>\r\n          <Form.Input\r\n            type = \"text\"\r\n            name = \"password\"\r\n            fluid icon='lock'\r\n            iconPosition='left'\r\n            placeholder='Password'\r\n            type='password'\r\n            value={userData.password}\r\n            onChange={handleInputChange}\r\n          />\r\n\r\n          <Button onClick={handleLogin} color='blue' fluid size='large'>\r\n            Login\r\n          </Button>\r\n        </Segment>\r\n      </Form>\r\n      {loginFailureMessage ? <Message error>{loginFailureMessage}</Message> : <p></p>}\r\n      <Message>\r\n      <Link to=\"/signup\">New to us? Sign Up</Link>\r\n      </Message>\r\n    </Grid.Column>\r\n  </Grid>\r\n    \r\n  \r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from \"react\";\r\nimport { Form,  Image, Card} from \"semantic-ui-react\"\r\nimport UserContext from '../../utils/UserContext';\r\n\r\n\r\n\r\nfunction Post(props) {\r\n  const { user, setPost, handleUserBtnClick, Post} = useContext(UserContext);\r\n  \r\n  return (\r\n      <> \r\n      <Card.Group className=\"post\">\r\n        <Card fluid color=\"blue\">\r\n          <Card.Content>\r\n            <Card.Header  style={{ color:\"#008ae6\" }} as=\"h2\">\r\n              <Image circular size=\"mini\" src={user && user.profilePic}/>{user && user.firstname}, what is on your mind?\r\n            </Card.Header>\r\n            <Card.Description>\r\n              <Form>\r\n                <Form.TextArea onChange={(e) => setPost(e.target.value)} placeholder='What sup?'  value={Post}/>\r\n                <Form.Button floated=\"right\" color=\"green\" onClick ={handleUserBtnClick}>Post</Form.Button>\r\n              </Form>\r\n            </Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n      </Card.Group>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\nexport default Post;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport API from \"../../utils/API\"\r\nimport { Button, Comment, Form, TextArea } from 'semantic-ui-react'\r\nimport UserContext from '../../utils/UserContext';\r\nimport moment from 'moment'\r\n\r\nconst style = {\r\n  h1: {\r\n    marginTop: \"10px\",\r\n    padding: \"5px\"\r\n  },\r\n    button: {\r\n     padding: \"10px\"\r\n  }\r\n}\r\n\r\n\r\n\r\nconst CommentSection = ({ post }) => {\r\n    const { user} = useContext(UserContext);\r\n    const [Comments, setComments] = useState([])\r\n    const [newComment, setNewComment] = useState(\"\")\r\n    const [showComment, setshowComment] = useState(false)\r\n\r\n    useEffect(() => {\r\n        loadComments()\r\n      }, [])\r\n\r\n    const loadComments = () => {\r\n        API.getComment(post)\r\n        .then(res => {\r\n             setComments(res.data)  \r\n        })\r\n    }\r\n\r\n    const handleCommentPost = (event) =>{\r\n      event.preventDefault();\r\n        API.postComment({\r\n            comment: newComment,\r\n            userId: user._id,\r\n            postId: post\r\n        })\r\n        .then( res=>{\r\n          setNewComment(\"\")\r\n          setComments(res.data.Comments) \r\n    \r\n        })\r\n        .catch(err =>\r\n            console.log(err)\r\n        )\r\n    }\r\n    function showCommentInfo(){\r\n      setshowComment(!showComment)\r\n  }\r\n    return (\r\n             <>\r\n             <Button color= \"blue\" style = {style.button} onClick={showCommentInfo}>\r\n                  Comments\r\n            </Button>\r\n            {showComment ? (\r\n              <>\r\n              <Form style={style.h1}>\r\n                <TextArea value={newComment} rows={2} onChange={(e) => setNewComment(e.target.value)} placeholder='Reply here' />\r\n                <Form.Button style={style.h1} content='Add Reply' floated=\"right\"labelPosition='left' icon='edit' primary onClick={handleCommentPost}/>\r\n              </Form>\r\n              <Comment.Group>\r\n              {Comments.map(comment=>(\r\n                <Comment key={comment._id}>\r\n                <Comment.Avatar src={comment.userId.profilePic} />\r\n                <Comment.Content>\r\n                  <Comment.Author as='a'>{comment.userId.username}</Comment.Author>\r\n                  <Comment.Metadata>\r\n                    <div> {moment(comment.date).fromNow()}</div>\r\n                  </Comment.Metadata>\r\n                  <Comment.Text>{comment.comment}</Comment.Text>\r\n                </Comment.Content>\r\n              </Comment> \r\n            ))}\r\n              </Comment.Group> \r\n                </> \r\n            ):(<p></p>)}\r\n                 </> \r\n        )\r\n    }\r\n\r\nexport default CommentSection","import React, { useState, useEffect, useContext} from 'react';\r\nimport { Button, Modal,Card, Table } from 'semantic-ui-react'\r\nimport API from '../../utils/API';\r\nimport UserContext from \"../../utils/UserContext\"\r\n\r\nconst Odds = () => {\r\n    const [Open, setOpen] = useState(false)\r\n    const [NFLgames, setNFLgames] = useState([])\r\n    const {footballColor} = useContext(UserContext)\r\n  \r\n    useEffect(()=>{\r\n        API.getNFL()\r\n        .then(res => {\r\n            setNFLgames(res.data)\r\n            })\r\n    }, []);\r\n    return(\r\n        <>\r\n        <Modal\r\n        open={Open}\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        trigger={<Button id=\"headers\" color=\"blue\" style={{fontSize: \"24px\", color:\"#000000\"}}>Compare Sportsbooks</Button>}\r\n        >\r\n        <Modal.Header id=\"headers\" style={{fontSize: \"50px\" ,backgroundColor: 'grey'}}>Compare Sportsbook</Modal.Header>\r\n        <Modal.Content scrolling>\r\n            <Modal.Description>\r\n            <Card.Group>\r\n            {NFLgames.map(game=>( \r\n                \r\n                <Card fluid style={{color:footballColor(game.teams[1]).primary, backgroundColor:footballColor(game.teams[0]).secondary}} key={game.teams[0]+game.teams[1]}>\r\n                    <Card.Content>\r\n                        <Card.Header style={{color:footballColor(game.teams[0]).primary, backgroundColor:footballColor(game.teams[0]).secondary}}>{game.teams[0] + \" vs \" + game.teams[1]}</Card.Header>\r\n                        <Table celled structured>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell id=\"headers\" style={{fontSize: \"18px\"}}rowSpan={game.sites_count}>SportBook Sites</Table.HeaderCell>\r\n                                    <Table.HeaderCell id=\"headers\" style={{fontSize: \"18px\"}}colSpan='2'>Points Spread</Table.HeaderCell>\r\n                                    <Table.HeaderCell id=\"headers\" style={{fontSize: \"18px\"}}colSpan='2'>Odds</Table.HeaderCell> \r\n                                </Table.Row>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell style={{color:footballColor(game.teams[0]).primary, backgroundColor:footballColor(game.teams[0]).secondary}}>{game.teams[0]}</Table.HeaderCell>\r\n                                    <Table.HeaderCell style={{color:footballColor(game.teams[1]).primary, backgroundColor:footballColor(game.teams[1]).secondary}}>{game.teams[1]}</Table.HeaderCell>\r\n                                    <Table.HeaderCell style={{color:footballColor(game.teams[0]).secondary, backgroundColor:footballColor(game.teams[0]).primary}}>{game.teams[0]}</Table.HeaderCell>\r\n                                    <Table.HeaderCell style={{color:footballColor(game.teams[1]).secondary, backgroundColor:footballColor(game.teams[1]).primary}}>{game.teams[1]}</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {game.sites.map(site=>(\r\n                                <Table.Row key={site.site_key}>\r\n                                    <Table.Cell >{site.site_nice}</Table.Cell>\r\n                                    <Table.Cell>{site.odds.spreads.points[0]}</Table.Cell>\r\n                                    <Table.Cell>{site.odds.spreads.points[1]}</Table.Cell>\r\n                                    <Table.Cell>{site.odds.spreads.odds[0]}</Table.Cell>\r\n                                    <Table.Cell>{site.odds.spreads.odds[1]}</Table.Cell>\r\n                                </Table.Row>\r\n                                ))}\r\n                            </Table.Body>\r\n                        </Table>\r\n                     </Card.Content>\r\n                </Card>\r\n            ))} \r\n            </Card.Group>\r\n            </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={() => setOpen(false)}>\r\n            Close\r\n          </Button>\r\n        </Modal.Actions>\r\n        \r\n      </Modal>\r\n    </>\r\n    )\r\n};\r\n\r\nexport default Odds","import React from \"react\";\r\n\r\n\r\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\r\nfunction SearchForm({users, search, handleInputChange, handleInputClick}) {\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"user\">Search Member UserName</label>\r\n        <input\r\n          value={search}\r\n          onChange={handleInputChange}   \r\n          name={\"user\"}\r\n          list=\"users\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search User\"\r\n          id=\"user\"\r\n        />\r\n        <datalist id=\"users\">\r\n          {users.map(user => (\r\n            <option value={user._id} key={user.username}>{user.username}</option>\r\n          ))}\r\n        </datalist>\r\n        \r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport UserContext from \"../../utils/UserContext\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Table,\r\n  Label,\r\n  Grid,\r\n  Card,\r\n  Input,\r\n  Dimmer, \r\n  Loader\r\n} from \"semantic-ui-react\";\r\nimport API from \"../../utils/API\";\r\nimport SearchForm from \"../../components/SearchForm\";\r\n\r\n\r\n\r\nconst Bet = () => {\r\n  const { user, footballColor } = useContext(UserContext);\r\n  const [Open, setOpen] = useState(false);\r\n  const [NFLgames, setNFLgames] = useState([]);\r\n  const [pickEm, setPickEm] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [wager, setWager] = useState({});\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    loadNFL();\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const handleChange = (event, { value }) => {\r\n    setPickEm((arr) => [...arr, value]);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const bets = {\r\n      sportTicket: pickEm,\r\n      competitor: search,\r\n      userId: user._id,\r\n      wager: wager,\r\n    };\r\n    API.postBet(bets)\r\n      .then((res) => {\r\n        setOpen(false);\r\n        setSearch(\"\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const loadNFL = () => {\r\n    setLoading(true)\r\n    API.getNFL().then((res) => {\r\n      setLoading(false)\r\n      setNFLgames(res.data);\r\n    });\r\n  };\r\n\r\n  const loadUsers = () => {\r\n    setLoading(true)\r\n    API.getUsers().then((res) => {\r\n      setUsers(res.data);\r\n      setLoading(false)\r\n    });\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n\r\n  \r\n  const handleInputBet = (event, { name }) => {\r\n    setWager(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={Open}\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        trigger={\r\n          <Button id=\"headers\" color=\"blue\" style={{fontSize: \"24px\", color:\"#000000\"}}>Bet-a-Buddy</Button>\r\n        }\r\n      >\r\n          {loading ? (\r\n                <Dimmer active>\r\n                   <Loader content='Loading' />\r\n                 </Dimmer>\r\n               ):(\r\n                 <>\r\n        \r\n        <Modal.Header id=\"headers\" style={{fontSize: \"50px\"}}>Betting Odds</Modal.Header>\r\n        <Modal.Content  style={{backgroundColor: \"#002244\" }} scrolling>\r\n          <Modal.Description>\r\n            <Grid stackable reversed=\"mobile\" columns={2} padded=\"vertically\">\r\n              <Grid.Column>\r\n                <Table celled compact definition>\r\n                  <Table.Header fullWidth>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell id=\"headers\" style={{fontSize: \"20px\"}}>Home Team</Table.HeaderCell>\r\n                      <Table.HeaderCell id=\"headers\" style={{fontSize: \"20px\"}}>Away Team</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n\r\n                  <Table.Body>\r\n                    {NFLgames.map((game) => (\r\n                      <Table.Row \r\n                        key={game.home_team + game.teams[0] + game.teams[1]}\r\n                      >\r\n\r\n                        <Table.Cell style={{backgroundColor:\"grey\"}}>\r\n                          <Button\r\n                            as=\"div\"\r\n                            labelPosition=\"right\"\r\n                            name={game.teams[0] + \" vs \" + game.teams[1]}\r\n                            value={[\r\n                              game.teams[0] + \" vs \" + game.teams[1],\r\n                              game.teams[0],\r\n                              game.sites[0].odds.spreads.points[0],\r\n                            ]}\r\n                            onClick={handleChange}\r\n                          >\r\n                            <Button style={{color:footballColor(game.teams[0]).primary, backgroundColor:footballColor(game.teams[0]).secondary }}icon>{game.teams[0]}</Button>\r\n                            <Label style={{color:footballColor(game.teams[0]).secondary,  backgroundColor:footballColor(game.teams[0]).primary}} basic pointing=\"left\">\r\n                              {game.sites[0].odds.spreads.points[0]}\r\n                            </Label>\r\n                          </Button>\r\n                        </Table.Cell>\r\n                        <Table.Cell style={{backgroundColor:\"grey\"}}>\r\n                          <Button\r\n                            as=\"div\"\r\n                            labelPosition=\"right\"\r\n                            name={game.teams[0] + \" vs \" + game.teams[1]}\r\n                            value={[\r\n                              game.teams[0] + \" vs \" + game.teams[1],\r\n                              game.teams[1],\r\n                              game.sites[0].odds.spreads.points[1],\r\n                            ]}\r\n                            onClick={handleChange}\r\n                          >\r\n                            <Button style={{color:footballColor(game.teams[1]).primary, backgroundColor:footballColor(game.teams[1]).secondary}}icon>{game.teams[1]}</Button>\r\n                            <Label style={{color:footballColor(game.teams[1]).secondary, backgroundColor:footballColor(game.teams[1]).primary}}basic pointing=\"left\">\r\n                              {game.sites[0].odds.spreads.points[1]}\r\n                            </Label>\r\n                          </Button>\r\n                        </Table.Cell>\r\n                      </Table.Row>\r\n                    ))}\r\n                  </Table.Body>\r\n                </Table>\r\n              </Grid.Column>\r\n\r\n              {pickEm.length > 0 ? (\r\n                <Grid.Column>\r\n                  <Card style={{backgroundColor: \"white\"}}>\r\n                    <Card.Header id=\"headers\" style={{fontSize: \"24px\"}}>Sports Ticket</Card.Header>\r\n                    <Card.Content style={{backgroundColor: \"#002244\"}}>\r\n                      <Card.Group>\r\n                        <Table style={{backgroundColor: \"grey\" }}>\r\n                          <Table.Body>\r\n                            <Table.Row>\r\n                              <Table.Cell>\r\n                                {pickEm.map((pick) => (\r\n                                  <Card \r\n                                    fluid\r\n                                    color=\"red\"\r\n                                    key={pick[0] + pick[1] + pick[2]}\r\n                                  >\r\n                                    <p>Game: {pick[0]}</p>\r\n                                    <p>Pick: {pick[1]}</p>\r\n                                    <p>Spread: {pick[2]}</p>\r\n                                  </Card>\r\n                                ))}\r\n                                <Button fluid onClick={() => setPickEm([])}>\r\n                                  Clear Bet\r\n                                </Button>\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                              <Table.Cell>\r\n                                <SearchForm\r\n                                  handleInputChange={handleInputChange}\r\n                                  users={users}\r\n                                  search={search}\r\n                                />\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                              <Table.Cell>\r\n                                <Input\r\n                                  onChange={handleInputBet}\r\n                                  labelPosition=\"right\"\r\n                                  type=\"text\"\r\n                                  placeholder=\"Amount\"\r\n                                >\r\n                                  <Label basic>$</Label>\r\n                                  <input />\r\n                                  <Label>.00</Label>\r\n                                </Input>\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                              <Table.Cell>\r\n                                <Button positive onClick={handleSubmit}>\r\n                                  Submit Wager Request\r\n                                </Button>\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          </Table.Body>\r\n                        </Table>\r\n                      </Card.Group>\r\n                    </Card.Content>\r\n                  </Card>\r\n                </Grid.Column>\r\n              ) : (\r\n                <p></p>\r\n              )}\r\n            </Grid>\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={() => setOpen(false)}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Actions>\r\n        </>)}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bet;\r\n","import React, { useContext} from \"react\"\r\nimport UserContext from '../../utils/UserContext'\r\nimport { Feed, Image, Button, Popup, Icon, Segment } from \"semantic-ui-react\";\r\nimport moment from \"moment\"\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Notifications = () => {\r\n    const {notifications, deleteNotifications} = useContext(UserContext)\r\n    \r\n    return(\r\n        <>\r\n        {notifications.length > 0 ? (\r\n        <Feed>\r\n        {notifications && notifications.map(notification =>(\r\n          <Feed.Event key = {notification._id}>\r\n                    <Feed.Content>\r\n                    <Popup content='Close' trigger={ <Icon color=\"red\" onClick={()=>deleteNotifications(notification._id)}fitted name='close' />} />\r\n                         {notification.type ===\"init wager\"? (\r\n                             <>\r\n                             <Feed.Label>\r\n                            <Image\r\n                            floated='right'\r\n                            size=\"mini\"\r\n                            circular\r\n                            src={notification.sportTicket.userId.profilePic}\r\n                            />\r\n                        </Feed.Label>\r\n                            <Feed.Summary>\r\n                            {notification.sportTicket.userId.username} wants to make a wager of $<strong>{notification.sportTicket.wager}</strong>!\r\n                                <Feed.Date>{moment(notification.createdAt).fromNow()} </Feed.Date>\r\n                            </Feed.Summary>\r\n                            <Feed.Extra>\r\n                                \r\n                                    <Popup content='View the wager' trigger={ <Link to={'/wager/'+ notification.sportTicket._id}><Button compact color='green'><Icon fitted name='eye' /></Button></Link>} />\r\n                                    <Popup content='Decline Wager' trigger={ <Button compact color='red'onClick={()=>deleteNotifications(notification._id)}><Icon fitted name='close' /></Button>} />\r\n                \r\n                            </Feed.Extra>\r\n                            </>\r\n                        ):(\r\n                            <></>  \r\n                        )}\r\n                        {notification.type===\"response wager\" ? (  \r\n                            <>\r\n                            <Feed.Label>\r\n                            <Image\r\n                            floated='right'\r\n                            size=\"mini\"\r\n                            circular\r\n                            src={notification.sportTicket.competitor.profilePic}\r\n                            />\r\n                        </Feed.Label>\r\n                            <Feed.Summary>\r\n                                {notification.sportTicket.competitor.username} has confirm the wager of $<strong>{notification.sportTicket.wager}</strong>!\r\n                                <Feed.Date>{moment(notification.createdAt).fromNow()} </Feed.Date>\r\n                            </Feed.Summary>\r\n                            </>\r\n                        ):(\r\n                            <></>\r\n                        )}\r\n                        {notification.type===\"update winner\" ? (\r\n                            <>\r\n                            <Feed.Label>\r\n                            <Image\r\n                            floated='right'\r\n                            size=\"mini\"\r\n                            circular\r\n                            src={notification.sportTicket.updater.profilePic}\r\n                            />\r\n                        </Feed.Label>\r\n                            <Feed.Summary>\r\n                            {notification.sportTicket.updater.username} has indicated that <strong>{notification.sportTicket.winner.username}</strong> has won the bet for ticket {notification.sportTicket._id}!\r\n                            <Feed.Date>{moment(notification.createdAt).fromNow()} </Feed.Date>\r\n                            \r\n                                    <Popup content='View/Edit the Results' trigger={ <Link to={'/wager/'+ notification.sportTicket._id}><Button  color='green'><Icon fitted name='eye' /></Button></Link>} />\r\n                                    <Popup content='Close' trigger={ <Button color='red'onClick={()=>deleteNotifications(notification._id)}><Icon fitted name='close' /></Button>} />\r\n                            \r\n                        </Feed.Summary>\r\n                        </>\r\n                        ): (<></>)}\r\n                        {notification.type===\"accept winner\" ? (\r\n                            <Feed.Summary>\r\n                            Ticket #{notification.sportTicket._id} has been approved!<strong> {notification.sportTicket.winner.username}</strong> has won the bet for ticket {notification.sportTicket._id}!\r\n                            <Feed.Date>{moment(notification.createdAt).fromNow()} </Feed.Date>\r\n                        </Feed.Summary>\r\n                        ): (<></>)}\r\n                        {notification.type===\"decline winner\" ? (\r\n                            <Feed.Summary>\r\n                            Ticket #{notification.sportTicket._id} has been decline for the winner.\r\n                            <Feed.Date>{moment(notification.createdAt).fromNow()} </Feed.Date>\r\n                                    <Popup content='Close' trigger={ <Button color='red'onClick={()=>deleteNotifications(notification._id)}><Icon fitted name='close' /></Button>} />\r\n                        </Feed.Summary>\r\n                        ): (<></>)}\r\n                    </Feed.Content>\r\n                </Feed.Event>\r\n                ))}\r\n        </Feed>\r\n        ):(<></>)}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React, { useEffect, useContext } from \"react\";\r\nimport UserContext from '../utils/UserContext';\r\nimport Login from \"../components/Login\"\r\nimport { Card, Icon, Image,Grid, Popup, Segment, Header, Dimmer, Loader } from 'semantic-ui-react'\r\nimport moment from 'moment'\r\nimport Post from \"../components/Post\"\r\nimport Comments from \"../components/Comments\"\r\nimport Odds from \"../components/Odds\";\r\nimport Edit from \"../components/Edit\";\r\nimport Bet from \"../components/Bet\";\r\nimport Notifications from \"../components/Notifications\";\r\nconst style = {\r\n    h1: {\r\n      padding: '5px'\r\n    },\r\n    button: {\r\n     padding: \"10px\"\r\n    }\r\n  }\r\n\r\nfunction Newsfeed(){   \r\n    const { loggedIn, user, loadPost, AllPost, deletePost,loading} = useContext(UserContext);\r\n   \r\n    useEffect(() => {\r\n      loadPost()\r\n    }, []) \r\n\r\n    return(\r\n        <>\r\n        {loggedIn ? (\r\n            \r\n            <Grid stackable columns=\"equal\">\r\n               {loading ? (\r\n                <Dimmer active>\r\n                   <Loader content='Loading' />\r\n                 </Dimmer>\r\n               ):(\r\n                <>\r\n            <Grid.Column>\r\n                 <Grid.Row>\r\n                    <Segment basic >\r\n                        <Card>\r\n                            <Odds />\r\n                            <Edit />\r\n                            <Bet />\r\n                        </Card>\r\n                    </Segment>\r\n                </Grid.Row>\r\n                </Grid.Column>\r\n                    \r\n                <Grid.Column width ={8}>\r\n                    <Segment style={{ margin:\"10px\", borderColor:\"#008ae6\" }} >\r\n                        <Grid stackable centered>\r\n                            <Grid.Row>\r\n                                <Grid.Column width={16}>\r\n                                    <Post />\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                            <Grid.Row >\r\n                                <Grid.Column width={12}>\r\n                                    <Card.Group  >\r\n                                        {AllPost && AllPost.map(post => (\r\n                                            <Card fluid color=\"blue\" key={post._id} style={style.h1}>\r\n                                                <Card.Content>\r\n                                                    <Popup\r\n                                                        content = {\"Member Since \"+  moment(post.userId.createdAt).format('MMMM  YYYY')}\r\n                                                        header={post.userId.username}\r\n                                                        trigger={ <Image floated=\"left\"  size='tiny' circular src={post.userId.profilePic}/>}\r\n                                                    />\r\n                                                    <Card.Header as='a'> \r\n                                                        <h4>{post.userId.username}</h4>   \r\n                                                    </Card.Header> \r\n                                                    <Card.Meta>\r\n                                                        {moment(post.createdAt).fromNow()} \r\n                                                    </Card.Meta>\r\n                                                    <Card.Description>\r\n                                                        {user && user._id === post.userId._id ? (\r\n                                                            <Icon className=\"float-right\" fitted name='close' onClick={()=>deletePost(post._id)} />\r\n                                                        ) : (\r\n                                                            <p></p>\r\n                                                        )} \r\n                                                        <h2>{post.post}</h2>\r\n                                                    </Card.Description>\r\n                                                </Card.Content>\r\n                                                <Comments post={post._id} style={style.h1}/>                            \r\n                                            </Card>\r\n                                        ))}\r\n                                    </Card.Group>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Segment>\r\n                </Grid.Column>\r\n               \r\n                <Grid.Column only=\"computer\">\r\n                    \r\n                        <Card style={{ borderColor:\"blue\", margin:\"10px\"  }} >\r\n                        <Header as='h6' icon>\r\n                            <Icon color=\"blue\" name='bell' />\r\n                            Notifications\r\n                        </Header>\r\n                            <Notifications />\r\n                        </Card>\r\n                   \r\n                </Grid.Column>\r\n                </>\r\n                )}   \r\n            </Grid>\r\n      ) : (          \r\n        <Login />       \r\n        )}   \r\n    </>\r\n    )\r\n}\r\n\r\nexport default Newsfeed;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Button, Form,  Input, Grid,Header, Segment } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\nimport UserContext from '../../utils/UserContext';\r\n\r\nconst Signup = () => {\r\n  const {\r\n    userData,\r\n    handleInputChange,\r\n    handleSignup,\r\n    failureMessage,\r\n  } = useContext(UserContext);\r\n  const [validFirstName, setValidFirstName] = useState(false);\r\n  const [validLastName, setValidLastName] = useState(false);\r\n  const [validEmail, setValidEmail] = useState(false);\r\n  const [validUserName, setValidUserName] = useState(false);\r\n  const [validPassword, setValidPassword] = useState(false);\r\n  const [isConfirmed, setIsConfirmed] = useState(false);\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState({});\r\n\r\n  useEffect(() => {\r\n    console.log(errorMessage);\r\n  }, []);\r\n\r\n  const handleConfirmPassword = (event) => {\r\n    const { value } = event.target;\r\n    setConfirmPassword(value);\r\n  };\r\n\r\n  // make sure firstname is at least 3 characters\r\n  const checkFirstname = () => {\r\n    const length = userData.firstname.length;\r\n    if (length === 0) {\r\n      setValidFirstName(false);\r\n      setErrorMessage({ ...errorMessage, firstname: null });\r\n    } else if (length < 3) {\r\n      setValidFirstName(false);\r\n      setErrorMessage({\r\n        ...errorMessage,\r\n        firstname: 'First Name should be at least 3 characters.',\r\n      });\r\n    } else {\r\n      setValidFirstName(true);\r\n      setErrorMessage({ ...errorMessage, firstname: null });\r\n    }\r\n  };\r\n  // make sure firstname is at least 3 characters\r\n  const checkLastname = () => {\r\n    const length = userData.lastname.length;\r\n    if (length === 0) {\r\n      setValidLastName(false);\r\n      setErrorMessage({ ...errorMessage, lastname: null });\r\n\r\n    } else if (length < 3) {\r\n      setValidLastName(false);\r\n      setErrorMessage({\r\n        ...errorMessage,\r\n        lastname: 'Last Name should be at least 3 characters.',\r\n      });\r\n    } else {\r\n      setValidLastName(true);\r\n      setErrorMessage({ ...errorMessage, lastname: null });\r\n    }\r\n  };\r\n\r\n  // uses regex to check is email is valid\r\n  const checkEmail = () => {\r\n    const validEmail = new RegExp(\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n    );\r\n    const valid = validEmail.test(userData.email);\r\n    const length = userData.email.length;\r\n    if (length === 0) {\r\n      setValidEmail(false);\r\n      setErrorMessage({ ...errorMessage, email: null });\r\n    } else if (!valid) {\r\n      setValidEmail(false);\r\n      setErrorMessage({\r\n        ...errorMessage,\r\n        email: 'Please enter a valid email address.',\r\n      });\r\n    } else {\r\n      setValidEmail(true);\r\n      setErrorMessage({ ...errorMessage, email: null });\r\n    }\r\n  };\r\n\r\n  // make sure username is at least 5 characters\r\n  const checkUsername = () => {\r\n    const length = userData.username.length;\r\n    if (length === 0) {\r\n      setValidUserName(false);\r\n      setErrorMessage({ ...errorMessage, username: null });\r\n    } else if (length < 5) {\r\n      setValidUserName(false);\r\n      setErrorMessage({\r\n        ...errorMessage,\r\n        username: 'Username should be at least 5 characters.',\r\n      });\r\n    } else {\r\n      setValidUserName(true);\r\n      setErrorMessage({ ...errorMessage, username: null });\r\n    }\r\n  };\r\n\r\n  // checks is password meets regex test (at least 8 letters, 1 capital and 1 number)\r\n  const checkPassword = () => {\r\n    const strongPassword = new RegExp(\r\n      /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,\r\n    );\r\n    const valid = strongPassword.test(userData.password);\r\n    const length = userData.password.length;\r\n    if (length === 0) {\r\n      setValidPassword(false);\r\n      setErrorMessage({ ...errorMessage, password: null });\r\n    } else if (!valid) {\r\n      setValidPassword(false);\r\n      setErrorMessage({\r\n        ...errorMessage,\r\n        password: 'Password should be at least 8 letters, 1 capital & 1 number',\r\n      });\r\n    } else {\r\n      setValidPassword(true);\r\n      setErrorMessage({ ...errorMessage, password: null });\r\n    }\r\n  };\r\n\r\n  // checks if 2 password fields match\r\n  const checkConfirmPassword = () => {\r\n    if (confirmPassword.length === 0) {\r\n      setIsConfirmed(false);\r\n      setErrorMessage({ ...errorMessage, confirmPassword: null });\r\n    } else if (\r\n      userData.password !== null &&\r\n      userData.password === confirmPassword\r\n    ) {\r\n      setIsConfirmed(true);\r\n      setErrorMessage({ ...errorMessage, confirmPassword: null });\r\n    } else {\r\n      setIsConfirmed(false);\r\n      setErrorMessage({\r\n        ...errorMessage,\r\n        confirmPassword: 'Passwords must match',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid textAlign='center' style={{ height: '100vh', margin:\"10px\"  }} verticalAlign='top'>\r\n    <Grid.Column style={{ maxWidth: 450, paddingRight:\"10px\"  }}>\r\n      <Header as='h2' color='blue' textAlign='center'>\r\n         Welcome, signup.\r\n      </Header>\r\n      <Form>\r\n        <Segment>\r\n          <Header as=\"h5\" color=\"red\">{failureMessage}</Header>\r\n            <Form.Field\r\n            control={Input}\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            id=\"firstname\"\r\n            placeholder=\"First Name\"\r\n            value={userData.firstname}\r\n            onChange={handleInputChange}\r\n            onBlur={checkFirstname}\r\n            valid={validFirstName.toString()}\r\n            error={errorMessage['firstname']}\r\n          />\r\n          <Form.Field\r\n            control={Input}\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            id=\"lastname\"\r\n            placeholder=\"Last Name \"\r\n            value={userData.lastname}\r\n            onChange={handleInputChange}\r\n            onBlur={checkLastname}\r\n            valid={validLastName.toString()}\r\n            error={errorMessage['lastname']}            \r\n          />\r\n          <Form.Field\r\n            control={Input}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            placeholder=\"Username\"\r\n            value={userData.username}\r\n            onChange={handleInputChange}\r\n            onBlur={checkUsername}\r\n            valid={validUserName.toString()}\r\n            error={errorMessage['username']}            \r\n          />\r\n          <Form.Field\r\n            control={Input}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"email@email.com\"\r\n            value={userData.email}\r\n            onChange={handleInputChange}\r\n            onBlur={checkEmail}\r\n            valid={validEmail.toString()}\r\n            error={errorMessage['email']}    \r\n          />\r\n          <Form.Field\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={userData.password}\r\n            onChange={handleInputChange}\r\n            onBlur={checkPassword}\r\n            valid={validPassword.toString()}\r\n            control={Input}            \r\n            error={errorMessage['password']}\r\n          />\r\n          <Form.Field\r\n             type=\"password\"\r\n             name=\"password\"\r\n             control={Input}\r\n             id=\"confirmPassword\"\r\n             placeholder=\"confirm password\"\r\n             value={confirmPassword}\r\n             onChange={handleConfirmPassword}\r\n             onKeyUp={checkConfirmPassword}\r\n             valid={isConfirmed.toString()} \r\n             error={errorMessage['confirmPassword']}\r\n          />\r\n        {validFirstName &&\r\n        validLastName &&\r\n        validEmail &&\r\n        validUserName &&\r\n        validPassword &&\r\n        isConfirmed\r\n         ? (\r\n          <Button onClick={handleSignup} color=\"green\" compact >\r\n            Signup\r\n          </Button>\r\n        ) : (\r\n          <Button  color=\"red\" compact disabled>\r\n            Signup\r\n          </Button>\r\n        )}\r\n        <p className=\"signupLink\">\r\n          <Link to=\"/login\">already have an account? Sign in here</Link>\r\n        </p>\r\n        </Segment>\r\n      </Form>\r\n      </Grid.Column>\r\n  </Grid>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\nimport Login from '../../components/Login';\r\nimport Signup from '../../components/Signup';\r\n\r\n\r\nconst Auth = (props) => {\r\n  return (\r\n    <div className=\"authBox\">\r\n      {props.action === 'login' ? <Login /> : <Signup />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\n\r\nconst NoMatch = () => {\r\n  return <h1>No Match</h1>;\r\n};\r\n\r\nexport default NoMatch;\r\n","import React, { useEffect, useContext, useState} from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport API from \"../utils/API\"\r\nimport { Button, Icon, Image, Item, Label, Card, Table } from 'semantic-ui-react'\r\nimport UserContext from \"../utils/UserContext\"\r\nimport moment from \"moment\"\r\nimport Login from \"../components/Login\"\r\n\r\nfunction Wager(props){\r\n    const {user, footballColor, loggedIn} = useContext(UserContext)\r\n    const [currentWager, setCurrentWager] = useState({})\r\n    const [currentWagerAuthor, setCurrentWagerAuthor] = useState({})\r\n    const [currentSportTicket, setCurrentSportTicket] = useState([])\r\n    \r\n    \r\n    const {id} = useParams()\r\n    useEffect(() => {\r\n      loadWager()\r\n    }, [])\r\n\r\n    const handleBetApproval = () =>{\r\n      API.updateBet({\r\n        id:id,\r\n        userId: user._id,\r\n        competitor: currentWagerAuthor._id\r\n      })\r\n      .then(res=>{window.location.href = '/'}) \r\n      .catch(err=>console.log(err))\r\n    }\r\n\r\n\r\n    const loadWager=()=>{\r\n        API.getBet(id)\r\n        .then(res => {\r\n          console.log(res.data)\r\n           setCurrentWager(res.data)\r\n           setCurrentWagerAuthor(res.data.userId)\r\n           setCurrentSportTicket(res.data.sportTicket)\r\n        })\r\n        .catch(err => console.log(err))\r\n        }\r\n\r\n      const handleFinalApporval =(competitor,complete, type) =>{\r\n        API.completeBet({\r\n          id:id,\r\n          userId:user._id,\r\n          competitor: competitor,\r\n          completed: complete,\r\n          type: type\r\n        })\r\n        .then(window.location.href =\"/\")\r\n      }\r\n\r\n    \r\n\r\n    return(\r\n      <>\r\n      {loggedIn ? (\r\n      <Card.Group centered>\r\n        {user._id === currentWager.competitor || user._id === currentWagerAuthor._id  ? (\r\n        <Card>\r\n          <Card.Content>\r\n            <Image floated=\"left\" circular size='tiny' src={currentWagerAuthor.profilePic} />           \r\n              <Card.Header>{currentWagerAuthor.username}</Card.Header>\r\n              <Card.Meta>\r\n                <span className='cinema'>{moment(currentWager.createdAt).startOf(\"hour\").fromNow()} </span>\r\n              </Card.Meta>\r\n              <Card.Description>\r\n              <Card.Header>Wager: $ {currentWager.wager}</Card.Header>\r\n                <Table celled compact definition >\r\n                    <Table.Header fullWidth>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Game</Table.HeaderCell>\r\n                            <Table.HeaderCell>Selection</Table.HeaderCell>\r\n                            <Table.HeaderCell>Spread</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                      {currentSportTicket.map(ticket=>(\r\n                        <Table.Row key={ticket[0]} style={{backgroundColor: footballColor(ticket[1]).primary, color: footballColor(ticket[1]).secondary}}>\r\n                            <Table.Cell>\r\n                              {ticket[0]}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                              {ticket[1]}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                              {ticket[2]}\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                      ))}\r\n                    </Table.Body>\r\n                </Table>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          {!currentWager.winner && user._id === currentWager.competitor ? (\r\n          <Card.Content extra>\r\n            <div className='ui two buttons'>\r\n              <Button onClick={handleBetApproval} compact color='green'>\r\n                Approve \r\n              </Button>\r\n              <Button compact color='red'>\r\n                Decline \r\n              </Button>\r\n            </div>\r\n          </Card.Content>\r\n          ):( currentWager.winner && currentWager.updater._id === user.__id ? (\r\n              <></>\r\n          ):(\r\n            <Card.Content extra>\r\n            <Card.Header>Winner: {currentWager.winner.username}</Card.Header>\r\n          <div className='ui two buttons'>\r\n            <Button onClick={()=>handleFinalApporval(currentWager.updater._id, true, \"accept winner\")} compact color='green'>\r\n              Approve \r\n            </Button>\r\n            <Button onClick={()=>handleFinalApporval(currentWager.updater._id, false, \"decline winner\")} compact color='red'>\r\n              Decline \r\n            </Button>\r\n          </div>\r\n        </Card.Content>\r\n          ))}\r\n          \r\n        </Card>\r\n        ):(<Card> This Ticket doesn't involve you.</Card>)}\r\n    </Card.Group>\r\n    ):(<Login />)}\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default Wager;","import React, {useEffect, useState} from \"react\"\r\nimport API from \"../../utils/API\"\r\nimport Ticker from 'react-ticker'\r\n \r\n \r\nconst SportsTicker = () =>{\r\n  const [articles, setArticles] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    API.getSportsNews()\r\n    .then(res=>{\r\n        setArticles(res.data)})\r\n    }, [])\r\n  \r\n    return articles ? (\r\n      <p style={{ whiteSpace: \"nowrap\", color:\"#1F8BFF\" }}>{articles.join(\"++++++\")}+++++++</p>\r\n    ) : (\r\n      <p style={{ visibility: \"hidden\" }}>Placeholder</p>\r\n    );\r\n  };\r\n\r\n  function StockTicker() {\r\n    return (\r\n      <Ticker offset=\"run-in\" speed={4}>\r\n        {() => <SportsTicker />}\r\n      </Ticker>\r\n    );\r\n  }\r\n\r\nexport default StockTicker \r\n\r\n\r\n","import React, { useContext } from \"react\";\r\nimport UserContext from \"../../utils/UserContext\";\r\nimport { Feed, Image, Button, Popup, Icon, Segment } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NotificationsBar from \"../Notifications\"\r\nconst Notifications = () => {\r\n  const { notifications, deleteNotifications } = useContext(UserContext);\r\n\r\n  return (\r\n    <>\r\n      \r\n          {notifications.length > 0 ? (\r\n          <Popup position=\"bottom right\" trigger={<Icon color=\"red\" name=\"alarm\" size=\"large\" />}>\r\n        <Popup.Header>Notifications</Popup.Header>\r\n        <Popup.Content>\r\n              <NotificationsBar />\r\n          </Popup.Content>\r\n      </Popup>\r\n          ) : (\r\n            <Popup position=\"bottom right\" header=\"no new notifications\" trigger={<Icon color=\"black\" name=\"alarm\" size=\"large\" />}/>\r\n          )}\r\n        \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useContext } from \"react\";\r\nimport UserContext from \"../../utils/UserContext\";\r\nimport SportsTicker from \"../Ticker\";\r\nimport MenuNotifictions from \"../MenuNotificaitons\"\r\nimport {  Menu, Grid,Image, Button, Icon } from \"semantic-ui-react\";\r\n\r\nconst Navigation = () => {\r\n  const { loggedIn, logout, user,sidebarToggle} = useContext(UserContext);\r\n  \r\n  const userPage = () => {\r\n    window.location.href = \"/member/\" + user._id;\r\n  };\r\n  const login = () => {\r\n    window.location.href = \"/login\" ;\r\n  };\r\n  const signup = () => {\r\n    window.location.href = \"/signup\" ;\r\n  };\r\n  const newsfeed = () => {\r\n    window.location.href = \"/newsfeed\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Menu borderless size=\"small\" >\r\n        <Menu.Menu postion=\"left\">\r\n          <Menu.Item>\r\n                <Image onClick={newsfeed} src=\"../../images/logo.jpg\" size=\"tiny\"/>\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n        <Menu.Menu position=\"right\">\r\n        {loggedIn ? (\r\n          <>\r\n         <Grid>\r\n           <Grid.Column only=\"computer\">\r\n            <Menu.Item fitted=\"vertically\">\r\n              <Button id=\"menuButton\" content=\"Newsfeed\" onClick={newsfeed} />\r\n              <Button id=\"menuButton\" content=\"My Accounts\" onClick={userPage} />\r\n              <Button id=\"menuButton\" content=\"Log Out\" onClick={logout} />\r\n            </Menu.Item> \r\n            </Grid.Column>\r\n            <Grid.Column only=\"tablet\">\r\n            <Menu.Item fitted=\"vertically\">\r\n              <Button id=\"menuButton\" content=\"Newsfeed\" onClick={newsfeed} />\r\n              <Button id=\"menuButton\" content=\"My Accounts\" onClick={userPage} />\r\n              <Button id=\"menuButton\" content=\"Log Out\" onClick={logout} />\r\n            </Menu.Item> \r\n            </Grid.Column>\r\n              <Grid.Column only=\"mobile\">\r\n                <Menu.Item >\r\n                  <MenuNotifictions />\r\n                  <Icon corner=\"top right\" onClick={sidebarToggle} name=\"toggle down\" size=\"big\" />\r\n                </Menu.Item>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <>\r\n          <Menu.Item fitted>\r\n            <Button compact id=\"menuButton\" content=\"Login\" onClick={login}  style={{color:\"#008ae6\" }}/>\r\n            <Button compact id=\"menuButton\" content=\"Signup\" onClick={signup}  style={{color:\"#008ae6\" }}/>\r\n          </Menu.Item>  \r\n      </>\r\n        )}\r\n        </Menu.Menu>\r\n      </Menu>\r\n      <SportsTicker />\r\n    </div>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React, { useContext } from \"react\";\r\nimport UserContext from \"../../utils/UserContext\";\r\nimport { Card, Grid, Icon, Image, Popup } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport Comments from \"../Comments\";\r\n\r\nconst UserPost = ({ AllPost }) => {\r\n  const { user, deletePost } = useContext(UserContext);\r\n\r\n  return (\r\n    <Grid style={{ backgroundColor: \"#002244\" }} columns={2} centered stackable>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          {AllPost &&\r\n            AllPost.map((post) => (\r\n              <Card key={post._id} style={{ backgroundColor: \"#d3d3d3\" }} centered>\r\n                <Card.Content>\r\n                  <Icon\r\n                    color=\"red\"\r\n                    className=\"float-right\"\r\n                    fitted\r\n                    name=\"close\"\r\n                    onClick={() => deletePost(post._id)}\r\n                  />\r\n                  <Popup\r\n                    content={\r\n                      \"Member Since \" +\r\n                      moment(post.userId.creatAt).format(\"MMMM  YYYY\")\r\n                    }\r\n                    header={post.userId.username}\r\n                    trigger={\r\n                      <Image\r\n                        floated=\"left\"\r\n                        size=\"tiny\"\r\n                        circular\r\n                        src={post.userId.profilePic}\r\n                      />\r\n                    }\r\n                  />\r\n                  <Card.Header as=\"a\">\r\n                    <h4>{post.userId.username}</h4>\r\n                  </Card.Header>\r\n                  <Card.Meta>\r\n                    {moment(post.createdAt).startOf(\"hour\").fromNow()}\r\n                  </Card.Meta>\r\n                  <Card.Description>\r\n                    <h2>{post.post}</h2>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Comments post={post._id} />\r\n              </Card>\r\n            ))}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserPost;\r\n","import React, {useState, useContext} from 'react'\r\nimport { Button, Modal } from 'semantic-ui-react'\r\nimport { Header, Card, Grid, Segment, Image, Form, Radio } from 'semantic-ui-react'\r\nimport API from '../../utils/API'\r\nimport UserContext from '../../utils/UserContext'\r\n\r\nfunction UpdateResults({bet}) {\r\n  const [open, setOpen] = useState(false)\r\n  const [winner, setWinner] = useState(\"\")\r\n  const {user, footballColor}= useContext(UserContext)\r\n\r\n  const handleChange = (e, { value }) => setWinner({ value })\r\n\r\n  const submitWinner = (id,competitor) => {\r\n      API.settleBet({\r\n          sportTicket: id,\r\n          winner: winner.value,\r\n          competitor: competitor,\r\n          updater: user._id\r\n    })\r\n    .then(setOpen(false))\r\n  }\r\n \r\n  return (\r\n    <Modal\r\n        style={{backgroundColor: \"#002244\" }}\r\n      centered={false}\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      trigger={<Button  color=\"green\" compact content='Update Results' icon='signup' size='medium' />\r\n    }\r\n    >\r\n    \r\n      <Modal.Header id=\"headers\" style={{backgroundColor: \"#d3d3d3\" , fontSize:\"24px\"}}   >Ticket #{bet._id}</Modal.Header>\r\n      <Modal.Content scrolling style={{backgroundColor: \"#002244\" }} >\r\n        <Modal.Description>\r\n        <Grid centered divided=\"vertically\" columns={2}>\r\n                    <Grid.Row style={{backgroundColor: \"#d3d3d3\" }} only=\"computer\">\r\n                                        <Grid.Column width={5}>               \r\n                                            <Image size=\"small\" circular floated=\"right\" src={bet.competitor.profilePic} />\r\n                                            <Header id=\"headers\">{bet.competitor.username}</Header>                      \r\n                                        </Grid.Column>\r\n                                        <Grid.Column width={1}>               \r\n                                            <Header>vs</Header>                      \r\n                                        </Grid.Column>\r\n                                        <Grid.Column width={5}>       \r\n                                            <Image size=\"small\" floated=\"left\" circular src={bet.userId.profilePic}></Image>\r\n                                            <Header id=\"headers\">{bet.userId.username}</Header>\r\n                                        </Grid.Column> \r\n                                    </Grid.Row>\r\n                                <Grid.Row>\r\n                    {bet.userId.username===user.username ? (\r\n                            <Card raised centered>\r\n                                <Card.Content>\r\n                                    <Card.Header>\r\n                                        You wagered ${bet.wager} against {bet.competitor.username}.\r\n                                    </Card.Header>\r\n                                        {bet.sportTicket.map(ticket=>(\r\n                                            <div key={ticket[1]+bet.competitor.username+ticket[0]+ticket[2]} >\r\n                                    <Card.Description style={{backgroundColor:footballColor(ticket[1]).primary, color: footballColor(ticket[1]).secondary}}  >\r\n                                        You picked the <strong>{ticket[1]}</strong> at <strong>{ticket[2]}</strong> in the <strong>{ticket[0]} game.</strong> \r\n                                    </Card.Description>\r\n                                    <Card.Meta>\r\n                                        Ticket Ref Number: {bet._id}\r\n                                    </Card.Meta>\r\n                                    </div>\r\n                                    ))}\r\n                                </Card.Content>\r\n                                <Card.Content  extra>\r\n                                    <Card.Header>Who won?</Card.Header>\r\n                                    <Form>\r\n                                        <Form.Field>\r\n                                        <Radio\r\n                                            label={bet.userId.username}\r\n                                            name='radioGroup'\r\n                                            value= {bet.userId._id}\r\n                                            checked={winner.value === bet.userId._id}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                        <Radio\r\n                                            label={bet.competitor.username}\r\n                                            name='radioGroup'\r\n                                            value= {bet.competitor._id}\r\n                                            checked={winner.value === bet.competitor._id}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                        </Form.Field>\r\n                                    </Form>\r\n                                    <Button floated=\"right\" compact content=\"Submit\" onClick={()=>submitWinner(bet._id,bet.competitor._id)}  color=\"green\" />\r\n                                </Card.Content>\r\n                            </Card>\r\n                        ):(<></>)}\r\n                    {bet.competitor.username===user.username ? ( \r\n                             <Card centered>\r\n                                <Card.Content>\r\n                                <Card.Header>{bet.userId.username} wagered ${bet.wager} against you .</Card.Header>\r\n                                    {bet.sportTicket.map(ticket=>(\r\n        \r\n                                    <Card.Description style={{backgroundColor:footballColor(ticket[1]).primary, color: footballColor(ticket[1]).secondary}}  >\r\n                                {bet.competitor.username}  picked the <strong>{ticket[1]}</strong> at <strong>{ticket[2]}</strong> in the <strong>{ticket[1]} game.</strong> </Card.Description>\r\n                                        \r\n                                ))}\r\n                                </Card.Content>\r\n                                <Card.Meta>\r\n                                        Ticket Ref Number: {bet._id}\r\n                                </Card.Meta>\r\n                                <Card.Content  extra>\r\n                                    <Card.Header>Who won?</Card.Header>\r\n                                    <Form>\r\n                                        <Form.Field>\r\n                                        <Radio\r\n                                            label={bet.userId.username}\r\n                                            name='radioGroup'\r\n                                            value= {bet.userId._id}\r\n                                            checked={winner.value === bet.userId._id}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                        <Radio\r\n                                            label={bet.competitor.username}\r\n                                            name='radioGroup'\r\n                                            value= {bet.competitor._id}\r\n                                            checked={winner.value === bet.competitor._id}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                        </Form.Field>\r\n                                    </Form>\r\n                                    <Button floated=\"right\" compact content=\"Submit\" onClick={()=>submitWinner(bet._id,bet.userId._id)}  color=\"green\" />\r\n                                </Card.Content>\r\n                            </Card>\r\n                     ):(<></>)} \r\n                    \r\n                     </Grid.Row>\r\n                </Grid>\r\n        </Modal.Description>\r\n        \r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color =\"red\" onClick={() => setOpen(false)}>Cancel</Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default UpdateResults\r\n","import React, { useContext } from 'react';\r\nimport UserContext from '../../utils/UserContext'\r\nimport moment from \"moment\"\r\nimport {  Header, Grid, Segment, Image, Card } from 'semantic-ui-react'\r\nimport UpdateResults from '../UpdateResults';\r\n\r\nconst UserBet = ({allBets}) =>{\r\n\r\n    const {footballColor, user} = useContext(UserContext)\r\n\r\n    return ( \r\n        <> \r\n        <Grid style={{backgroundColor: \"#002244\" }} columns={4} centered  stackable>\r\n            <Grid.Row >\r\n                {allBets.map(bet=>(\r\n                    <div key={bet._id+bet.completed}>\r\n                    {bet.completed===false ? (\r\n                    <Grid.Column style={{margin:\"10px\", backgroundColor: \"white\", padding: \"10px\"}}width={4} >\r\n                        <Segment compact style={{backgroundColor:\"white\"}}>\r\n                        <Grid centered divided=\"vertically\" columns={2}>\r\n                                <Grid.Row style={{backgroundColor: \"#d3d3d3\" }} only=\"computer\">\r\n                                        <Grid.Column width={5}>               \r\n                                            <Image size=\"small\" circular floated=\"right\" src={bet.competitor.profilePic} />\r\n                                            <Header id=\"headers\">{bet.competitor.username}</Header>                      \r\n                                        </Grid.Column>\r\n                                        <Grid.Column width={1}>               \r\n                                            <Header>vs</Header>                      \r\n                                        </Grid.Column>\r\n                                        <Grid.Column width={5}>       \r\n                                            <Image size=\"small\" floated=\"left\" circular src={bet.userId.profilePic}></Image>\r\n                                            <Header id=\"headers\">{bet.userId.username}</Header>\r\n                                        </Grid.Column> \r\n                                    </Grid.Row>\r\n                                    <Grid.Row>\r\n                                    {bet.userId.username===user.username ? (\r\n                                        <Card style={{backgroundColor: \"#d3d3d3\"}}centered>\r\n                                            <Card.Content>\r\n                                                <Card.Header>\r\n                                                    You wagered ${bet.wager} against {bet.competitor.username}.\r\n                                                </Card.Header>\r\n                                                    {bet.sportTicket.map(ticket=>(\r\n                                                        <div key={ticket[1]}>\r\n                                                <Card.Description style={{backgroundColor:footballColor(ticket[1]).primary, color:footballColor(ticket[1]).secondary}}>\r\n                                                    You picked the <strong >{ticket[1]}</strong> at <strong>{ticket[2]}</strong> in the <strong>{ticket[0]} game.</strong> \r\n                                                </Card.Description>\r\n                                                <Card.Meta>\r\n                                                    Ticket Ref Number: {bet._id}\r\n                                                </Card.Meta>\r\n                                                <Card.Meta>{moment(bet.createdAt).fromNow}</Card.Meta>\r\n                                                </div>\r\n                                                ))}\r\n                                            </Card.Content>\r\n                                        </Card>\r\n                                    ):(<></>)}\r\n                                    {bet.competitor.username===user.username ? ( \r\n                                        <Card style={{backgroundColor: \"#d3d3d3\"}}centered>\r\n                                            <Card.Content>\r\n                                            <Card.Header >{bet.userId.username} wagered ${bet.wager} against you .</Card.Header>\r\n                                                {bet.sportTicket.map(ticket=>(\r\n                                                <Card.Description style={{backgroundColor:footballColor(ticket[1]).primary, color:footballColor(ticket[1]).secondary}}>\r\n                                            {bet.userId.username}  picked the <strong>{ticket[1]}</strong> at <strong>{ticket[2]}</strong> in the <strong>{ticket[0]} game.</strong> </Card.Description>\r\n                                            ))}\r\n                                            </Card.Content>\r\n                                            <Card.Meta>\r\n                                                    Ticket Ref Number: {bet._id}\r\n                                            </Card.Meta>\r\n                                        </Card>\r\n                                        ):(<></>)} \r\n                                    </Grid.Row>     \r\n                                    <Grid.Row>\r\n                                        <UpdateResults key={bet._id} bet={bet} />    \r\n                                    </Grid.Row>         \r\n                                </Grid>\r\n                                </Segment>\r\n                            </Grid.Column> \r\n                    ):(<></>)}\r\n                \r\n                </div>\r\n                ))}\r\n                \r\n            </Grid.Row>\r\n        \r\n        </Grid>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default UserBet","import React, { useContext } from 'react';\r\nimport UserContext from '../../utils/UserContext'\r\nimport { Card, Grid} from 'semantic-ui-react'\r\nimport moment from \"moment\"\r\n\r\nconst Results = ({allResults}) =>{\r\n    const {user,footballColor} = useContext(UserContext)\r\n\r\n    return (\r\n        <Grid style={{backgroundColor: \"#002244\" }} centered  stackable>\r\n            <Grid.Row>\r\n        {allResults.map(bet => (\r\n            <div key={bet._id+bet.completed}>\r\n            {bet.completed ===true? (\r\n                    <Grid.Column style={{margin:\"10px\", backgroundColor: \"#d3d3d3\"}}width={4} >\r\n                        <Card style={{backgroundColor: \"#d3d3d3\"}}centered>\r\n                        <Card.Content>\r\n                            <Card.Header id=\"headers\">ticket # {bet._id}</Card.Header>\r\n                            <Card.Description style={{backgroundColor:footballColor(bet.sportTicket[0][1]).primary, color:footballColor(bet.sportTicket[0][1]).secondary}}>\r\n                                {bet.userId.username} wagered ${bet.wager} on the {bet.sportTicket[0][1]} at {bet.sportTicket[0][2]} in the {bet.sportTicket[0][0]} game.\r\n                            </Card.Description>\r\n                        </Card.Content>\r\n                        {bet.winner._id===user._id ? (\r\n                            <>\r\n                        <Card.Content extra>\r\n                               <Card.Header style={{color:\"green\"}}>Congrats! You won this wager for {bet.wager}. Good win {bet.winner.username}!</Card.Header>\r\n                        </Card.Content>                               \r\n                         <Card.Meta>{moment(bet.createdAt).fromNow}</Card.Meta>\r\n\r\n                        </>\r\n                        \r\n                        ):(\r\n                            <>\r\n                        <Card.Content extra>\r\n                            <Card.Header style={{color: \"red\"}}>Sorry! You loss this wager for ${bet.wager}. {bet.winner.username} won this bet.</Card.Header>\r\n                        </Card.Content>\r\n                        <Card.Meta>{moment(bet.createdAt).fromNow}</Card.Meta>\r\n                        </>\r\n                        )}                   \r\n                    </Card>\r\n                </Grid.Column>                 \r\n            ):(<></>)}\r\n            </div>\r\n            ))}\r\n\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Results","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Tab } from 'semantic-ui-react'\r\nimport UserPost from '../components/UserPost'\r\nimport UserBets from '../components/UserBet'\r\nimport { useParams } from \"react-router-dom\";\r\nimport API from '../utils/API';\r\nimport Results from '../components/Result'\r\nimport UserContext from \"../utils/UserContext\"\r\nimport Login from \"../components/Login\"\r\n\r\nconst Member = () => {\r\n    const [AllPost, setAllPost] = useState([])\r\n    const [allBets, setAllBets] = useState([])\r\n    const [allResults,setAllResults] = useState([])\r\n    const {user, loggedIn} = useContext(UserContext)\r\n\r\n    const {id} = useParams()\r\n    const panes = [\r\n      { menuItem: 'My Posts', render: () => <Tab.Pane><UserPost AllPost={AllPost} /></Tab.Pane> },\r\n      { menuItem: 'My Bets', render: () => <Tab.Pane><UserBets allBets={allBets}/></Tab.Pane> },\r\n      { menuItem: 'My Results', render: () => <Tab.Pane><Results allResults={allResults}/></Tab.Pane> },\r\n    ]\r\n\r\n    const panes2 = [\r\n      { menuItem: 'Posts', render: () => <Tab.Pane><UserPost AllPost={AllPost} /></Tab.Pane> },\r\n    ]\r\n    useEffect(() => {\r\n        API.newsfeedByID(id)\r\n        .then(res=>{\r\n            setAllPost(res.data)\r\n        })\r\n        API.getUserBet(id)\r\n        .then(res=>{\r\n            setAllBets(res.data.sportTicket)\r\n            setAllResults(res.data.sportTicket)\r\n        })      \r\n      }, []);\r\n\r\n    return( \r\n      <>\r\n      {loggedIn ? (\r\n      <>\r\n      {user && user._id === id ? (\r\n      <Tab menu={{ fluid: true, vertical: true, tabular: true }} panes={panes} />\r\n      ):(<Tab menu={{ fluid: true, vertical: true, tabular: true }} panes={panes2} />)} \r\n      </>\r\n      ) : (<Login />)}\r\n      </>\r\n    )\r\n \r\n}\r\n\r\nexport default Member","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Edit from \"./components/Edit\";\r\nimport API from \"./utils/API\";\r\nimport Newsfeed from \"./pages/Newsfeed\";\r\nimport Auth from \"./pages/Auth\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Wager from \"./pages/Wager\";\r\nimport TopNav from \"./components/TopNav\";\r\nimport UserContext from \"./utils/UserContext\";\r\nimport Comment from \"./components/Comments\";\r\nimport Bet from \"./components/Bet\";\r\nimport Notifications from \"./components/Notifications\";\r\nimport Member from \"./pages/Member\";\r\nimport UserPost from \"./components/UserPost\";\r\nimport UpdateResult from \"./components/UpdateResults\";\r\nimport Result from \"./components/Result\"\r\nimport { Grid, Icon, Menu, Segment, Sidebar } from \"semantic-ui-react\";\r\n\r\nconst App = () => {\r\n  const [userData, setUserData] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [loggedIn, setLoggedin] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [failureMessage, setFailureMessage] = useState();\r\n  const [loginFailureMessage, setLoginFailureMessage] = useState(\"\");\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [AllPost, setAllPost] = useState([]);\r\n  const [Post, setPost] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    isLoggedIn();\r\n  }, []);\r\n\r\n  const deleteNotifications = (id) => {\r\n    API.deleteNotifications(id)\r\n      .then(\r\n        API.getNotifications(user._id).then((res) => {\r\n          console.log(res.data);\r\n          setNotifications(res.data);\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserData({ ...userData, [name]: value });\r\n  };\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault();\r\n    const data = {\r\n      username: userData.username,\r\n      password: userData.password,\r\n    };\r\n    setLoading(true)\r\n    if (userData.username && userData.password) {\r\n      API.login(data)\r\n        .then((user) => {\r\n          if (user.data.loggedIn) {\r\n             window.location.href = \"/\"\r\n             setLoading(false)\r\n             setLoggedin(true);\r\n            setUser(user.data.user);\r\n            console.log(\"log in successful\");\r\n           \r\n          } else {\r\n            console.log(\"Something went wrong :(\");\r\n            setLoginFailureMessage(\"Login failed, Please try again.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleSignup = (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = {\r\n        firstname: userData.firstname,\r\n        lastname: userData.lastname,\r\n        email: userData.email,\r\n        username: userData.username,\r\n        password: userData.password,\r\n      };\r\n\r\n      if (userData.username && userData.password) {\r\n        API.signup(data)\r\n          .then((user) => {\r\n            if (user.data === \"email is already in use\") {\r\n              setFailureMessage(\"Email already in use.\");\r\n            }\r\n            if (user.data === \"user already exists\") {\r\n              setFailureMessage(\r\n                \"User already exists. Choose another username.\"\r\n              );\r\n            }\r\n            if (user.data.loggedIn) {\r\n              if (user.data.loggedIn) {\r\n                setLoggedin(true);\r\n                setUser(user.data.user);\r\n                window.location.href = \"/\";\r\n              } else {\r\n                console.log(\"something went wrong :(\");\r\n                console.log(user.data);\r\n                setFailureMessage(user.data);\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"App -> error\", error);\r\n    }\r\n  };\r\n\r\n  const loadPost = () => {\r\n    setLoading(true)\r\n    API.newsfeed()\r\n      .then((res) => {\r\n        setAllPost(res.data);\r\n        setLoading(false)\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const isLoggedIn = () => {\r\n    if (!loggedIn) {\r\n      API.isLoggedIn().then((user) => {\r\n        if (user.data.loggedIn) {\r\n          setLoggedin(true);\r\n          setUser(user.data.user);\r\n          API.getNotifications(user.data.user._id).then((res) => {\r\n            console.log(res.data);\r\n            setNotifications(res.data);\r\n          });\r\n        } else {\r\n          console.log(user.data.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n  const footballColor = (team) =>{\r\n    switch(team) {\r\n      case \"Arizona Cardinals\":\r\n        return {primary: \"#97233F\", secondary: \"#000000\"}\r\n      case \"Atlanta Falcons\":\r\n        return {primary: \"#A71930\", secondary: \"#000000\"}\r\n      case \"Baltimore Ravens\":\r\n        return {primary:\"#241773\", secondary:\"#000000\"}\r\n      case \"Buffalo Bills\":\r\n        return {primary:\"#00338D\", secondary:\"#C60C30\"}\r\n      case \"Carolina Panthers\":\r\n        return {primary:\"#0085CA\", secondary:\"#000000\"}\r\n      case \"Chicago Bears\":\r\n        return {primary:\"#C83803\", secondary:\"#0B162A\"}\r\n      case \"Cincinnati Bengals\":\r\n        return {primary:\"#FB4F14\", secondary:\"#000000\"} \r\n      case \"Cleveland Browns\":\r\n        return {primary:\"#311D00\", secondary:\"#FF3C00\"}\r\n      case \"Dallas Cowboys\":\r\n        return {primary:\"#003594\", secondary:\"#869397\"}\r\n      case \"Denver Broncos\":\r\n        return {primary:\"#FB4F14\", secondary:\"#002244\"}\r\n      case \"Detriot Lions\":\r\n          return {primary:\"#0076B6\", secondary:\"#B0B7BC\"}\r\n      case \"Green Bay Packers\":\r\n          return {primary:\"#FFB612\", secondary:\"#203731\"}\r\n      case \"Houston Texans\":\r\n          return {primary:\"#03202F\", secondary:\"#A71930\"}\r\n      case \"Indianapolis Colts\":\r\n          return {primary:\"#002C5F\", secondary:\"#A2AAAD\"}\r\n      case \"Jacksonville Jaguars\":\r\n          return {primary:\"#101820\", secondary:\"#D7A22A\"}\r\n      case \"Kansas City Chiefs\":\r\n          return {primary:\"#E31837\", secondary:\"#FFB81C\"}\r\n      case \"Los Angeles Chargers\":\r\n          return {primary:\"#D7A22A\", secondary:\"#000000\"}\r\n      case \"Los Angeles Rams\":\r\n          return {primary:\"#003594\", secondary:\"#FFA300\"}\r\n      case \"Miami Dolphins\":\r\n          return {primary:\"#008E97\", secondary:\"#FC4C02\"}\r\n      case \"Minnesota Vikings\":\r\n          return {primary:\"#4F2683\", secondary:\"#FFC62F\"}\r\n      case \"New England Patriots\":\r\n          return {primary:\"#002244\", secondary:\"#C60C30\"}\r\n      case \"New Orleans Saints\":\r\n          return {primary:\"#D3BC8D\", secondary:\"#101820\"}\r\n      case \"New York Giants\":\r\n          return {primary:\"#0B2265\", secondary:\"#A71930\"}\r\n      case \"New York Jets\":\r\n          return {primary:\"#125740\", secondary:\"#000000\"}\r\n      case \"Las Vegas Raiders\":\r\n          return {primary:\"#000000\", secondary:\"#A5ACAF\"}\r\n      case \"Philadelphia Eagles\":\r\n          return {primary:\"#004C54\", secondary:\"#A5ACAF\"}\r\n      case \"Pittsburgh Steelers\":\r\n          return {primary:\"#FFB612\", secondary:\"#0000000\"}\r\n      case \"San Francisco 49ers\":\r\n          return {primary:\"#AA0000\", secondary:\"#B3995D\"}\r\n      case \"Seattle Seahawks\":\r\n          return {primary:\"#69BE28\", secondary:\"#002244\"}\r\n      case \"Tampa Bay Buccaneers\":\r\n          return {primary:\"#D50A0A\", secondary:\"#FF7900\"}\r\n      case \"Tennessee Titans\":\r\n          return {primary:\"#0C2340\", secondary:\"#4B92DB\"}\r\n      case \"Washington Redskins\":\r\n          return {primary:\"#773141;\", secondary:\"#FFB612\"}\r\n        break;\r\n      default:\r\n        return {primary: \"blue\"}\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    if (loggedIn) {\r\n      API.logout().then(() => {\r\n        console.log(\"logged out successfully\");\r\n        setLoggedin(false);\r\n        setUser(null);\r\n      });\r\n    }\r\n  };\r\n\r\n  const memberPage = () =>{\r\n    window.location.href=\"/member/\"+user._id\r\n  }\r\n  const handleUserBtnClick = async (e) => {\r\n    try {\r\n      const res = await API.postPost({\r\n        post: Post,\r\n        userId: user,\r\n      });\r\n      loadPost();\r\n      setPost(\"\");\r\n      \r\n    } catch (error) {\r\n      console.log(\r\n        \"There was an error processing your results, please try again\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  function deletePost(id) {\r\n    API.deletePost(id)\r\n      .then((res) => loadPost())\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  const sidebarToggle = () =>{\r\n    setVisible(!visible)\r\n  }\r\n\r\n  const contextValue = {\r\n    userData,\r\n    loggedIn,\r\n    user,\r\n    failureMessage,\r\n    loginFailureMessage,\r\n    notifications,\r\n    AllPost,\r\n    Post,\r\n    handleInputChange,\r\n    handleLogin,\r\n    handleSignup,\r\n    logout,\r\n    setUser,\r\n    deleteNotifications,\r\n    loadPost,\r\n    setPost,\r\n    handleUserBtnClick,\r\n    deletePost,\r\n    sidebarToggle,\r\n    footballColor,\r\n    loading,\r\n    setLoading,\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={contextValue}>\r\n      <Router>\r\n        <div>\r\n          <TopNav />\r\n            <Grid.Column>\r\n              <Sidebar.Pushable as={Segment}>\r\n                <Sidebar\r\n                  as={Menu}\r\n                  animation=\"overlay\"\r\n                  icon=\"labeled\"\r\n                  inverted\r\n                  onHide={() => setVisible(false)}\r\n                  vertical\r\n                  visible={visible}\r\n                  width=\"thin\"\r\n                >\r\n                  <Menu.Item as=\"a\" href=\"/\">\r\n                    <Icon  name=\"home\" />\r\n                    SportsFeed\r\n                  </Menu.Item>\r\n                  <Menu.Item  onClick={memberPage}>\r\n                    <Icon name=\"user\" />\r\n                    My Account\r\n                  </Menu.Item>\r\n                  <Menu.Item as=\"a\" onClick={logout}>\r\n                    <Icon name=\"log out\" />\r\n                    Log Out\r\n                  </Menu.Item>\r\n                </Sidebar>\r\n\r\n                <Sidebar.Pusher dimmed={visible}>\r\n                  <Segment basic>\r\n                    <Switch>\r\n                    <Route exact path=\"/\" component={Newsfeed} />\r\n                    <Route\r\n                      exact\r\n                      path=\"/login\"\r\n                      render={() => <Auth action=\"login\" />}\r\n                    />\r\n                    <Route\r\n                      exact\r\n                      path=\"/signup\"\r\n                      render={() => <Auth action=\"signup\" />}\r\n                    />\r\n                    <Route exact path=\"/newsfeed\" component={Newsfeed} />\r\n                    <Route exact path=\"/member/:id\" component={Member} />\r\n                    <Route exact path=\"/wager/:id\" component={Wager} />\r\n                    <Route render={NoMatch} />\r\n                    <Comment />\r\n                    <Edit />\r\n                    <Bet />\r\n                    <Notifications />\r\n                    <UserPost />\r\n                    <UpdateResult />\r\n                    <Result />\r\n                    </Switch>\r\n                  </Segment>\r\n                </Sidebar.Pusher>\r\n              </Sidebar.Pushable>\r\n            </Grid.Column>\r\n        </div>\r\n      </Router>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './App.css';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}